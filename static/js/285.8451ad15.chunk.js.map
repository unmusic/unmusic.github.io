{"version":3,"file":"static/js/285.8451ad15.chunk.js","mappings":"uGAoFA,IAAe,IAA0B,mE,+GCnEzC,EAZe,WACb,IACMA,GADiBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA1BC,WAEJ,gCACA,oBACJ,OACE,gBAAKH,UAAWA,EAAhB,UACE,gBAAKI,IAAKC,EAAAA,EAAgBC,IAAI,aAGnC,C,oKC6CD,EAnDa,WAAO,IAAD,EACjB,GAAmCC,EAAAA,EAAAA,GAAS,CAAC,cAAc,kBACzDC,EAAAA,EAAAA,WACc,CACVC,aAAc,aAEfC,MAAK,SAACC,GACL,OAAOA,CACR,GAPsD,IAAnDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAe1B,OACE,iBAAKd,UAAU,OAAf,WACE,UAACe,EAAA,EAAD,YACE,4EACA,iBACEC,KAAK,cACLC,QAAQ,8CAGXL,IAAcE,IAAQ,SAAC,IAAD,KACrBF,GAAaC,IAAS,uBAAIA,KAC1BD,GAAaE,IACb,eAAId,UAAU,gBAAd,gBACGc,QADH,IACGA,GADH,UACGA,EAAMI,aADT,aACG,EAAaC,KAAI,SAACC,GAAc,IAAD,YACxBC,EAAE,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAUE,WAAb,aAAG,EAAeD,GACpBE,EAAK,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAUI,cAAb,iBAAG,EAAkBD,aAArB,iBAAG,EAAyBC,cAA5B,iBAAG,EAAiCC,YAApC,aAAG,EAAuCC,IAC/CV,EAAI,OAAGI,QAAH,IAAGA,GAAH,UAAGA,EAAUI,cAAb,aAAG,EAAkBR,KAC/B,OACE,yBACE,UAAC,KAAD,CACEW,GAAE,oBAAeN,GACjBO,QAAS,kBA3BJC,EA2BsBR,EA3BVS,EA2Bcd,OA1B7Ce,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,oBAAsC,CAC7CH,WAAAA,EACAC,aAAAA,IAHgB,IAACD,EAAYC,CA2BR,EAFX,WAIE,gBAAK1B,IAAKmB,EAAOjB,IAAKU,KACtB,wBAAKA,QANAK,EAUZ,QAKV,EChDD,EARiB,WACf,OACE,gBAAKrB,UAAU,YAAf,UACE,SAAC,EAAD,KAGL,C,oCCRD,IAEMQ,EAFayB,EAAQ,MAESC,aAAa,CAC/CC,MAAOC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,8BACnBC,YAAaF,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYG,oCAG3B,K","sources":["assets/images/loading-spinner.svg","components/loader/index.js","components/home/index.js","pages/index.js","utils/contentful.js"],"sourcesContent":["var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoadingSpinner(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    opacity: 0.14\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(30 12 12)\",\n    opacity: 0.29\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(60 12 12)\",\n    opacity: 0.43\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(90 12 12)\",\n    opacity: 0.57\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(120 12 12)\",\n    opacity: 0.71\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(150 12 12)\",\n    opacity: 0.86\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 11,\n    y: 1,\n    width: 2,\n    height: 5,\n    transform: \"rotate(180 12 12)\"\n  }), /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    calcMode: \"discrete\",\n    dur: \"0.75s\",\n    values: \"0 12 12;30 12 12;60 12 12;90 12 12;120 12 12;150 12 12;180 12 12;210 12 12;240 12 12;270 12 12;300 12 12;330 12 12;360 12 12\",\n    repeatCount: \"indefinite\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoadingSpinner);\nexport default __webpack_public_path__ + \"static/media/loading-spinner.63623cd63cd5d02d2228bd2db215718e.svg\";\nexport { ForwardRef as ReactComponent };","import { useContext } from \"react\";\nimport { PlayerStateContext } from \"../../contexts/Player\";\nimport LoadingSpinner from \"../../assets/images/loading-spinner.svg\";\nimport \"./index.css\";\n\nconst Loader = () => {\n  const { showPlayer } = useContext(PlayerStateContext);\n  const className = showPlayer\n    ? \"loading-container player-open\"\n    : \"loading-container\";\n  return (\n    <div className={className}>\n      <img src={LoadingSpinner} alt=\"Loading\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { logEvent } from \"@amplitude/analytics-browser\";\nimport contentfulClient from \"../../utils/contentful\";\nimport AMPLITUDE_EVENTS from \"../../constants/amplitude-events\";\nimport Loader from \"../loader\";\nimport \"./index.css\";\n\nconst Home = () => {\n  const { isLoading, error, data } = useQuery([\"playlists\"], () =>\n    contentfulClient\n      .getEntries({\n        content_type: \"playlist\",\n      })\n      .then((response) => {\n        return response;\n      })\n  );\n  const handleClick = (playlistId, playlistName) => {\n    logEvent(AMPLITUDE_EVENTS.HOME_PLAYLIST_CLICK, {\n      playlistId,\n      playlistName,\n    });\n  };\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>UnMusic - Productivity music for Developers</title>\n        <meta\n          name=\"description\"\n          content=\"Stay zen Stay focused with White Noise\"\n        />\n      </Helmet>\n      {isLoading && !data && <Loader />}\n      {!isLoading && error && <p>{error}</p>}\n      {!isLoading && data && (\n        <ul className=\"category-list\">\n          {data?.items?.map((playlist) => {\n            const id = playlist?.sys?.id;\n            const cover = playlist?.fields?.cover?.fields?.file?.url;\n            const name = playlist?.fields?.name;\n            return (\n              <li key={id}>\n                <Link\n                  to={`/playlist/${id}`}\n                  onClick={() => handleClick(id, name)}\n                >\n                  <img src={cover} alt={name} />\n                  <h4>{name}</h4>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import Home from \"../components/home\";\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-page\">\n      <Home />\n    </div>\n  );\n};\n\nexport default HomePage;\n","const contentful = require(\"contentful\");\n\nconst contentfulClient = contentful.createClient({\n  space: process.env.REACT_APP_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.REACT_APP_CONTENTFUL_ACCESS_TOKEN,\n});\n\nexport default contentfulClient;\n"],"names":["className","useContext","PlayerStateContext","showPlayer","src","LoadingSpinner","alt","useQuery","contentfulClient","content_type","then","response","isLoading","error","data","Helmet","name","content","items","map","playlist","id","sys","cover","fields","file","url","to","onClick","playlistId","playlistName","logEvent","AMPLITUDE_EVENTS","require","createClient","space","process","REACT_APP_CONTENTFUL_SPACE_ID","accessToken","REACT_APP_CONTENTFUL_ACCESS_TOKEN"],"sourceRoot":""}